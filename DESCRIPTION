Package: dittodb
Title: A Test Environment for DB Requests
Version: 0.1.0
Authors@R: c(
    person(given = "Jonathan",
           family = "Keane",
           role = c("aut", "cre"),
           email = "jkeane@gmail.com",
           comment = c(ORCID = "0000-0001-7087-9776")),
    person(given = "Mauricio",
          family = "Vargas",
          role = c("aut"),
          email = "mvargas@dcc.uchile.cl",
          comment = c(ORCID = "0000-0003-1017-7574"))         
  )
URL: https://dittodb.jonkeane.com/, https://github.com/jonkeane/dittodb
BugReports: https://github.com/jonkeane/dittodb/issues
Description: Testing and documenting code that communicates with remote
  databases can be painful. Although the interaction with R is usually relatively 
  simple (e.g. data(frames) passed to and from a database), because they rely on 
  a separate service and the data there, testing them can be difficult to set up,
  unsustainable in a CI environment, or impossible without replicating an entire
  production cluster. This package addresses that by allowing you to make 
  recordings from your database interactions and then play them back while 
  testing (or in other contexts) all without needing to spin up or have access 
  to the database your code would typically connect to.
License: Apache License (>= 2.0)
Encoding: UTF-8
LazyData: true
Depends:
    R (>= 3.3.0),
    DBI
Imports: 
    digest,
    glue,
    methods,
    testthat
Suggests: 
    callr,
    covr,
    dplyr,
    dbplyr,
    knitr,
    nycflights13,
    odbc,
    RMariaDB,
    RPostgres,
    RPostgreSQL,
    RSQLite,
    spelling,
    withr,
    rmarkdown,
    lintr
RoxygenNote: 7.1.0
Roxygen: list(markdown = TRUE)
Language: en-US
VignetteBuilder: knitr
Collate: 
    'capture-requests.R'
    'connection.R'
    'dbListTables-Fields.R'
    'driver-specific-connections.R'
    'dbQueries-Results.R'
    'dbMisc.R'
    'mock-db.R'
    'mock-paths.R'
    'nycflights13_sql.R'
    'paths.R'
    'quote.R'
    'redact.R'
    'utils.R'
