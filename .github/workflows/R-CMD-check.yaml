on: [push, pull_request]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: macOS-latest, r: '3.6'}
        - { os: macOS-latest, r: 'devel', args: "--no-manual"}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - uses: r-lib/actions/setup-tinytex@master
        if: contains(matrix.config.args, 'no-manual') == false

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('DESCRIPTION') }}

      - name: Setup databases
        run: |
          bash db-setup/travis-postgres-macos.sh; bash db-setup/postgres-reset-macos.sh
          bash db-setup/travis-mariadb-macos.sh; bash db-setup/mariadb-reset-macos.sh

      - name: Install dependencies
        run: |
          Rscript -e "install.packages(c('remotes', 'rcmdcheck', 'httptest'))" -e "remotes::install_deps(dependencies = TRUE)"
          Rscript -e "install.packages(c('RMariaDB','odbc','RPostgreSQL','RPostgres'), type = 'source');"
          echo $GITHUB_WORKSPACE

      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'note')"
